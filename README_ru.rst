=================================
Обзор проекта «Bookstore Manager»
=================================
Создать веб-приложение под названием «Bookstore Manager», которое позволяет пользователям управлять книгами, авторами и заказами. Система должна предоставлять функциональные возможности для добавления, редактирования, удаления и отображения информации о книгах, данных об авторах и истории заказов.

Основные функции
----------------
	1. Управление книгами:
		#. Добавление новых книг с названием, описанием, ценой, датой публикации и жанром
		#. Редактирование существующих сведений о книгах
		#. Удаление книг из базы данных
		#. Отображение списка всех книг с разбивкой на страницы (10 элементов на страницу)
	2. Управление авторами:
		#. Добавление новых авторов с именем, датой рождения и биографией
		#. Редактирование существующих сведений об авторах
		#. Удаление авторов из базы данных
		#. Отображение списка всех авторов с разбивкой на страницы (10 элементов на страницу)
	3. Управление заказами:
		#. Размещение новых заказов с названиями книг, количеством и общей стоимостью
		#. Просмотр истории заказов для каждого клиента
		#. Расчет и отображение общей стоимости заказа
	4. Аутентификация пользователей:
		#. Реализация базовой аутентификации пользователей с использованием ASP.NET Identity
		#. Разрешение пользователям регистрироваться, входить в систему и выходить из нее
		#. Ограничение доступа к определенным страницам на основе ролей пользователей (администратор, менеджер, клиент)
	5. Функциональность поиска:
		#. Реализация функции поиска для поиска книг по названию, автору или жанру
	6. Проверка данных:
		#. Обеспечение надлежащей проверки входных данных (например, обязательные поля, формат электронной почты)
		#. Грамотная обработка ошибок и отображение удобных сообщений об ошибках
	7. Адаптивный дизайн:
		#. Создание адаптивного макета, который хорошо работает на настольных компьютерах и мобильных устройствах
	8. Модульное тестирование:
		#. Написание модульных тестов для критически важных методов бизнес-логики
		#. Стремитесь к покрытию кода не менее 50%

Технические требования
----------------------
	#. Используйте ASP.NET Core 6.0 или более позднюю версию
	#. Внедрите Entity Framework Core для операций с базой данных
	#. Используйте ASP.NET Core MVC для структуры веб-приложения
	#. Внедрите конечные точки RESTful API для внешних служб (при необходимости)
	#. Используйте Bootstrap или другой фреймворк CSS для стилизации
	#. Внедрите надлежащее ведение журнала во всем приложении
	#. Следуйте принципам SOLID и чистым шаблонам архитектуры
	#. Используйте внедрение зависимостей для лучшей поддержки
	#. Внедрите надлежащую обработку ошибок и управление исключениями

Поставляемые результаты
-----------------------
	1. Репозиторий исходного кода (например, GitHub) с завершенным проектом
	2. Документация:
		#. Обзор проекта
		#. Системные требования
		#. Схема базы данных
		#. Документация API (если реализована)
		#. Отчет о модульном тестировании
	3. Слайды презентации (5-10 минут), объясняющие проект, его особенности и проблемы, с которыми пришлось столкнуться в ходе разработки

Критерии оценки
---------------
	#. Функциональная полнота (40%)
	#. Качество и организация кода (30%)
	#. Производительность и масштабируемость (15%)
	#. Безопасность и передовой опыт (10%)
	#. Документация и презентация (5%)
